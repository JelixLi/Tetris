syntax = "proto3";

package tensorflow.data;

import "tensorflow/core/data/service/common.proto";

// Message representing journaled dispatcher metadata updates. When we apply
// one of these changes to the dispatcher's in-memory state, we also write an
// Update message to the journal.
message Update {
  oneof update_type {
    RegisterDatasetUpdate register_dataset = 1;
    RegisterWorkerUpdate register_worker = 5;
    CreateJobUpdate create_job = 2;
    AcquireJobClientUpdate acquire_job_client = 6;
    ReleaseJobClientUpdate release_job_client = 7;
    CreateTaskUpdate create_task = 3;
    FinishTaskUpdate finish_task = 4;
  }
}

message RegisterDatasetUpdate {
  int64 dataset_id = 1;
  uint64 fingerprint = 2;
}

message RegisterWorkerUpdate {
  string worker_address = 1;
}

message NamedJobKeyDef {
  string name = 1;
  int64 index = 2;
}

message CreateJobUpdate {
  int64 job_id = 1;
  int64 dataset_id = 2;
  ProcessingModeDef processing_mode = 3;
  // Only some jobs have names, so this may be unset.
  NamedJobKeyDef named_job_key = 4;
}

message AcquireJobClientUpdate {
  int64 job_id = 1;
  int64 job_client_id = 2;
}

message ReleaseJobClientUpdate {
  int64 job_client_id = 1;
  // The time when the client was released, measured in microseconds since the
  // epoch.
  int64 time_micros = 2;
}

message CreateTaskUpdate {
  int64 task_id = 1;
  int64 job_id = 2;
  int64 dataset_id = 3;
  ProcessingModeDef processing_mode = 5;
  string worker_address = 4;
}

message FinishTaskUpdate {
  int64 task_id = 1;
}
